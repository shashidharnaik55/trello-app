{"ast":null,"code":"import _toConsumableArray from\"/Users/macbookpro/Desktop/My-Work/My-Work-Space/Trello-clone (React, Redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{combineReducers}from\"redux\";var initialState={userName:\"\",page:1,bgImgs:[],boards:[{boardName:\"mukhtar\",isSet:false,BgImgUrl:\"\",listArray:[{listSet:false,listName:\"list 1\",cards:[{cardName:\"card 1\"}]},{listSet:false,listName:\"list 2\",cards:[{cardName:\"card 1\"},{cardName:\"card 2\"},{cardName:\"card 3\"}]}]}]};function appReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var stateCopy=JSON.parse(JSON.stringify(state));switch(action.type){case\"fImg\":console.log(action.payload);stateCopy.bgImgs=[].concat(_toConsumableArray(stateCopy.bgImgs),_toConsumableArray(action.payload));stateCopy.page++;return stateCopy;case\"addBoard\":return addToList(stateCopy,action.payload);case\"deleteItem\":var newBoards=stateCopy.boards.filter(function(el,i){return i!==action.payload;});stateCopy.boards=newBoards;return stateCopy;case\"editField\":return editField(stateCopy,action.payload.data,action.payload.index);case\"editIndex\":var newBoard=stateCopy.boards.indexOf(action.payload);stateCopy.boards=newBoard;return stateCopy;case\"boardClicked\":return clicked(stateCopy,action.payload.Bindex,action.payload.ind);case\"addList\":console.log(action.payload);return addList(stateCopy,action.payload.data,action.payload.index);case\"addCard\":return addCard(stateCopy,action.payload.data,action.payload.Bindex,action.payload.Lindex);case\"sorted\":return sorted(stateCopy,action.payload);default:return stateCopy;}}var rootReducers=combineReducers({appReducer:appReducer});export default rootReducers;var addToList=function addToList(state,data){data.listArray=[];var newBoardList=state.boards.slice();newBoardList.push(data);state.boards=newBoardList;return state;};var editField=function editField(state,data,index){state.boards.map(function(element,i){if(i===index){element.boardName=data;element.isSet=!element.isSet;}return true;});return state;};var clicked=function clicked(state,bindex,index){console.log(bindex,index);state.boards[bindex].listArray.map(function(elem,i){if(i===index){elem.listSet=!elem.listSet;}return true;});return state;};var addList=function addList(state,data,index){state.boards[index].listArray.push({listName:data,cards:[]});return state;};var addCard=function addCard(state,data,Bindex,Lindex){console.log(state);state.boards[Bindex].listArray[Lindex].cards.push({cardName:data});return state;};var sorted=function sorted(state,_ref){var droppableIdStart=_ref.droppableIdStart,droppableIdEnd=_ref.droppableIdEnd,droppableIndexStart=_ref.droppableIndexStart,droppableIndexEnd=_ref.droppableIndexEnd,draggableId=_ref.draggableId,BoardNum=_ref.BoardNum;// dragging for same list\nif(droppableIdStart===droppableIdEnd){var listIndex=parseInt(droppableIdStart.split(\"t\")[1]);console.log(\"listIndex\",listIndex);var list=state.boards[BoardNum].listArray[listIndex];var card=list.cards[droppableIndexStart];list.cards.splice(droppableIndexEnd,0,card);list.cards.splice(droppableIndexStart,1);}// dragging for other list\nelse{var startListIndex=parseInt(droppableIdStart.split(\"t\")[1]);var endListIndex=parseInt(droppableIdEnd.split(\"t\")[1]);var startList=state.boards[BoardNum].listArray[startListIndex];var endList=state.boards[BoardNum].listArray[endListIndex];var _card=startList.cards[droppableIndexStart];endList.cards.splice(droppableIndexEnd,0,_card);startList.cards.splice(droppableIndexStart,1);}console.log(state.boards[BoardNum]);return state;};","map":{"version":3,"sources":["/Users/macbookpro/Desktop/My-Work/My-Work-Space/Trello-clone (React, Redux)/src/redux/stateReducer.js"],"names":["combineReducers","initialState","userName","page","bgImgs","boards","boardName","isSet","BgImgUrl","listArray","listSet","listName","cards","cardName","appReducer","state","action","stateCopy","JSON","parse","stringify","type","console","log","payload","addToList","newBoards","filter","el","i","editField","data","index","newBoard","indexOf","clicked","Bindex","ind","addList","addCard","Lindex","sorted","rootReducers","newBoardList","slice","push","map","element","bindex","elem","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","BoardNum","listIndex","parseInt","split","list","card","splice","startListIndex","endListIndex","startList","endList"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\n\nlet initialState = {\n    userName: \"\",\n    page: 1,\n    bgImgs: [],\n    boards: [{\n        boardName: \"mukhtar\",\n        isSet: false,\n        BgImgUrl: \"\",\n        listArray: [{\n            listSet: false,\n            listName: \"list 1\",\n            cards: [{\n                cardName: \"card 1\"\n            }]\n        },\n        {\n            listSet: false,\n            listName: \"list 2\",\n            cards: [{\n                cardName: \"card 1\"\n            },\n            {\n                cardName: \"card 2\"\n            },\n            {\n                cardName: \"card 3\"\n            }]\n        }]\n    }]\n}\n\nfunction appReducer(state = initialState, action) {\n    let stateCopy = JSON.parse(JSON.stringify(state))\n    switch (action.type) {\n        case \"fImg\":\n            console.log(action.payload)\n            stateCopy.bgImgs = [...stateCopy.bgImgs,...action.payload]\n            stateCopy.page++\n            return stateCopy;\n        case \"addBoard\":\n            return addToList(stateCopy, action.payload)\n        case \"deleteItem\":\n            let newBoards = stateCopy.boards.filter((el, i) => i !== action.payload)\n            stateCopy.boards = newBoards\n            return stateCopy;\n        case \"editField\":\n            return editField(stateCopy, action.payload.data, action.payload.index)\n        case \"editIndex\":\n            let newBoard = stateCopy.boards.indexOf(action.payload)\n            stateCopy.boards = newBoard\n            return stateCopy;\n        case \"boardClicked\":\n            return clicked(stateCopy, action.payload.Bindex, action.payload.ind)\n        case \"addList\":\n            console.log(action.payload)\n            return addList(stateCopy, action.payload.data, action.payload.index)\n        case \"addCard\":\n            return addCard(stateCopy, action.payload.data, action.payload.Bindex, action.payload.Lindex)\n        case \"sorted\":\n            return sorted(stateCopy, action.payload)\n        default:\n            return stateCopy;\n    }\n}\n\nconst rootReducers = combineReducers({\n    appReducer\n})\n\nexport default rootReducers;\n\nlet addToList = (state, data) => {\n    data.listArray = []\n    let newBoardList = state.boards.slice()\n    newBoardList.push(data)\n    state.boards = newBoardList;\n    return state;\n}\n\nlet editField = (state, data, index) => {\n    state.boards.map((element, i) => {\n        if (i === index) {\n            element.boardName = data\n            element.isSet = !element.isSet\n        }\n        return true\n    });\n    return state\n}\n\nlet clicked = (state, bindex, index) => {\n    console.log(bindex, index)\n    state.boards[bindex].listArray.map((elem, i) => {\n        if (i === index) {\n            elem.listSet = !elem.listSet\n        }\n        return true\n    })\n    return state\n}\n\nlet addList = (state, data, index) => {\n    state.boards[index].listArray.push({ listName: data, cards: [] })\n    return state\n}\n\nlet addCard = (state, data, Bindex, Lindex) => {\n    console.log(state)\n    state.boards[Bindex].listArray[Lindex].cards.push({ cardName: data })\n    return state\n}\n\nlet sorted = (state, { droppableIdStart, droppableIdEnd, droppableIndexStart, droppableIndexEnd, draggableId, BoardNum }) => {\n    // dragging for same list\n    if (droppableIdStart === droppableIdEnd) {\n        const listIndex = parseInt(droppableIdStart.split(\"t\")[1])\n        console.log(\"listIndex\", listIndex)\n        const list = state.boards[BoardNum].listArray[listIndex]\n        const card = list.cards[droppableIndexStart]\n        list.cards.splice(droppableIndexEnd, 0, card)\n        list.cards.splice(droppableIndexStart, 1)\n    }\n    // dragging for other list\n    else {\n        const startListIndex = parseInt(droppableIdStart.split(\"t\")[1])\n        const endListIndex = parseInt(droppableIdEnd.split(\"t\")[1])\n        const startList = state.boards[BoardNum].listArray[startListIndex]\n        const endList = state.boards[BoardNum].listArray[endListIndex]\n        const card = startList.cards[droppableIndexStart]\n        endList.cards.splice(droppableIndexEnd, 0, card)  \n        startList.cards.splice(droppableIndexStart, 1)\n    }\n    console.log(state.boards[BoardNum])\n    return state\n}"]},"metadata":{},"sourceType":"module"}