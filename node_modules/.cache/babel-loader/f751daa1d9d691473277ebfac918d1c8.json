{"ast":null,"code":"import _classCallCheck from\"/Users/macbookpro/Desktop/My-Work/My-Work-Space/Trello-clone (React, Redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/macbookpro/Desktop/My-Work/My-Work-Space/Trello-clone (React, Redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/macbookpro/Desktop/My-Work/My-Work-Space/Trello-clone (React, Redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/macbookpro/Desktop/My-Work/My-Work-Space/Trello-clone (React, Redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{Link}from\"react-router-dom\";import{addList,addCard,sorted,editField,setClick,boardClicked}from\"../actions/action\";import{bindActionCreators}from\"redux\";import{DragDropContext,Draggable,Droppable}from\"react-beautiful-dnd\";var MyBoard=/*#__PURE__*/function(_Component){_inherits(MyBoard,_Component);var _super=_createSuper(MyBoard);function MyBoard(){var _this;_classCallCheck(this,MyBoard);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={listName:\"\",cardName:\"\"};_this.editData=function(field,index){_this.props.editField(field,index);};_this.onDragEnd=function(result){var destination=result.destination,source=result.source,draggableId=result.draggableId;var BoardNum=_this.props.location.state.index;if(!destination)return true;_this.props.sorted(source.droppableId,destination.droppableId,source.index,destination.index,draggableId,BoardNum);};_this.componentDidUpdate=function(prevProps,prevState){if(prevState===_this.state){_this.setState({listName:\"\",cardName:\"\"});}if(prevProps===_this.props){_this.setState(_this.props.boards.listSet);}};return _this;}_createClass(MyBoard,[{key:\"render\",value:function render(){var _this2=this;var BoardNum=this.props.location.state.index;var boards=this.props.boards;var elem=boards[BoardNum];return/*#__PURE__*/React.createElement(\"div\",{style:{background:\"url(\".concat(elem.BgImgUrl,\")\"),backgroundSize:\"cover\",backgroundPosition:\"50%\"}},/*#__PURE__*/React.createElement(\"nav\",{className:\"navbar py-1 navBar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row col-md-5\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-home rounded mr-1\",\"aria-hidden\":\"true\"}),/*#__PURE__*/React.createElement(\"input\",{className:\"searchInp rounded\",type:\"search\",placeholder:\"Search...\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-2 mt-1 text-center\"},/*#__PURE__*/React.createElement(Link,{to:\"/\",style:{textDecoration:'none',color:'white'}},/*#__PURE__*/React.createElement(\"h4\",{className:\"trello\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-trello mr-1\",\"aria-hidden\":\"true\"}),\"Trello\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"float-right font-weight-bolder text-white\"},elem.boardName)))),/*#__PURE__*/React.createElement(DragDropContext,{onDragEnd:this.onDragEnd},/*#__PURE__*/React.createElement(\"div\",{id:\"mainContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"list m-2\"},elem.listArray.map(function(elem,index){return/*#__PURE__*/React.createElement(Droppable,{droppableId:\"list\".concat(index)},function(provider){return/*#__PURE__*/React.createElement(\"div\",Object.assign({},provider.droppableProps,{ref:provider.innerRef,key:index,className:\"bg-white p-2 col-2 rounded m-1\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"font-weight-bolder\"},elem.listName),elem.cards.map(function(elm,cardindex){return/*#__PURE__*/React.createElement(Draggable,{index:cardindex,draggableId:\"list\".concat(index,\"card\").concat(cardindex)},function(provider){return/*#__PURE__*/React.createElement(\"div\",Object.assign({},provider.draggableProps,{ref:provider.innerRef},provider.dragHandleProps,{key:cardindex,className:\"bg-light p-2 m-2 shadow rounded text-dark\"}),elm.cardName);});}),provider.placeholder,/*#__PURE__*/React.createElement(\"div\",{className:\"text-center rounded addBtn\"},elem.listSet?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"textarea\",{value:_this2.state.cardName,placeholder:\"Add Card...\",style:{border:'solid 1px rgb(165, 165, 165)'},onChange:function onChange(e){return _this2.setState({cardName:e.target.value});},rows:\"1\",className:\"card-title p-2 bg-light rounded\"}),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this2.props.addCard(_this2.state.cardName,BoardNum,index);},className:\"btn btn-success\"},\"Add Card\")):/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return _this2.props.boardClicked(BoardNum,index);}},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-plus\",\"aria-hidden\":\"true\"}),\" Add\")));});}),/*#__PURE__*/React.createElement(\"div\",{style:{display:\"inlineBlock\",paddingRight:\"10px\",whiteSpace:\"nowrap\"}},/*#__PURE__*/React.createElement(\"input\",{style:{background:\"transparent\",color:\"white\"},value:this.state.listName,placeholder:\"Add List...\",type:\"text\",onChange:function onChange(e){return _this2.setState({listName:e.target.value});}}),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-sm bg-light\",onClick:function onClick(){return _this2.props.addList(_this2.state.listName,BoardNum);}},\"Add \",/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-plus\",\"aria-hidden\":\"true\"})))))));}}]);return MyBoard;}(Component);var mapStateToProps=function mapStateToProps(state){console.log(\"myboard state\",state);return{boards:state.appReducer.boards};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({addList:addList,addCard:addCard,sorted:sorted,editField:editField,setClick:setClick,boardClicked:boardClicked},dispatch);};export default connect(mapStateToProps,mapDispatchToProps)(MyBoard);","map":{"version":3,"sources":["/Users/macbookpro/Desktop/My-Work/My-Work-Space/Trello-clone (React, Redux)/src/components/board.js"],"names":["React","Component","connect","Link","addList","addCard","sorted","editField","setClick","boardClicked","bindActionCreators","DragDropContext","Draggable","Droppable","MyBoard","state","listName","cardName","editData","field","index","props","onDragEnd","result","destination","source","draggableId","BoardNum","location","droppableId","componentDidUpdate","prevProps","prevState","setState","boards","listSet","elem","background","BgImgUrl","backgroundSize","backgroundPosition","textDecoration","color","boardName","listArray","map","provider","droppableProps","innerRef","cards","elm","cardindex","draggableProps","dragHandleProps","placeholder","border","e","target","value","display","paddingRight","whiteSpace","mapStateToProps","console","log","appReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { addList, addCard, sorted, editField, setClick, boardClicked } from \"../actions/action\";\nimport { bindActionCreators } from \"redux\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\"\n\n\n\nclass MyBoard extends Component {\n\n    state = {\n        listName: \"\",\n        cardName: \"\"\n    }\n\n    editData = (field, index) => {\n        this.props.editField(field, index)\n    }\n\n    onDragEnd = (result) => {\n        let { destination, source, draggableId } = result;\n        let { index: BoardNum } = this.props.location.state;\n        if (!destination) return true\n        this.props.sorted(source.droppableId, destination.droppableId, source.index, destination.index, draggableId, BoardNum)\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n      if(prevState===this.state){\n        this.setState({\n            listName: \"\",\n            cardName: \"\",\n        })\n      }\n      if(prevProps===this.props){\n          this.setState(this.props.boards.listSet)\n      }\n    };\n    \n\n    render() {\n        let { index: BoardNum } = this.props.location.state\n        const { boards } = this.props\n        const elem = boards[BoardNum]\n        return (\n            <div style={{ background: `url(${elem.BgImgUrl})`, backgroundSize: \"cover\", backgroundPosition: \"50%\"}}>\n                <nav className=\"navbar py-1 navBar\">\n                    <div className=\"d-flex col\">\n                        <div className=\"row col-md-5\">\n                            <i className=\"fa fa-home rounded mr-1\" aria-hidden=\"true\"></i>\n                            <input className=\"searchInp rounded\" type=\"search\" placeholder=\"Search...\" />\n                        </div>\n                        <div className=\"col-md-2 mt-1 text-center\">\n                            <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }} ><h4 className=\"trello\"><i className=\"fa fa-trello mr-1\" aria-hidden=\"true\"></i>Trello</h4></Link>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"float-right font-weight-bolder text-white\">{elem.boardName}</div>\n                        </div>\n                    </div>\n                </nav>\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <div id=\"mainContainer\">\n                        <div className=\"list m-2\">\n                            {elem.listArray.map((elem, index) => {\n                            return <Droppable droppableId={`list${index}`}>\n                                {(provider) => (\n                                    <div {...provider.droppableProps} ref={provider.innerRef} key={index} className=\"bg-white p-2 col-2 rounded m-1\">\n                                        <div className=\"font-weight-bolder\">{elem.listName}</div>\n                                        {elem.cards.map((elm, cardindex) => {\n                                            return <Draggable index={cardindex} draggableId={`list${index}card${cardindex}`}>\n                                                {(provider) => (\n                                                    <div {...provider.draggableProps} ref={provider.innerRef} {...provider.dragHandleProps} key={cardindex} className=\"bg-light p-2 m-2 shadow rounded text-dark\">\n                                                        {elm.cardName}\n                                                    </div>\n                                                )\n                                                }\n                                            </Draggable>\n                                        })}\n                                        {provider.placeholder}\n                                        <div className=\"text-center rounded addBtn\">{elem.listSet ? <div><textarea value={this.state.cardName} placeholder=\"Add Card...\" style={{ border: 'solid 1px rgb(165, 165, 165)' }} onChange={(e) => this.setState({ cardName: e.target.value })} rows=\"1\" className=\"card-title p-2 bg-light rounded\"></textarea>\n                                            <button onClick={() => this.props.addCard(this.state.cardName, BoardNum, index)} className=\"btn btn-success\">Add Card</button></div>\n                                            : <div onClick={() => this.props.boardClicked(BoardNum, index)}><i className=\"fa fa-plus\" aria-hidden=\"true\" /> Add</div>}\n                                        </div>\n                                    </div>\n                                )\n                                }\n                            </Droppable>\n                        })}\n                        <div style={{ display: \"inlineBlock\", paddingRight: \"10px\", whiteSpace: \"nowrap\"}}>\n                            <input style={{ background: \"transparent\" , color: \"white\" }} value={this.state.listName} placeholder=\"Add List...\" type=\"text\" onChange={(e) => this.setState({ listName: e.target.value })} />\n                            <button className=\"btn btn-sm bg-light\" onClick={() => this.props.addList(this.state.listName, BoardNum)}>Add <i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\n                        </div>\n                        </div>\n                    </div>\n                </DragDropContext>\n            </div>\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(\"myboard state\", state)\n    return {\n        boards: state.appReducer.boards\n    };\n}\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        addList, addCard, sorted, editField, setClick, boardClicked\n    }, dispatch)\n\n}\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(MyBoard);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}