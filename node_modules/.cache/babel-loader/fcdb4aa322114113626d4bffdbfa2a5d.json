{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Downloads/my codes/daily-assignment/W24Wass/weekly-ass/src/components/listComp.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addList, addCard, sorted, editField } from \"../actions/action\";\nimport { bindActionCreators } from \"redux\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\n\nclass ListComp extends Component {\n  render() {\n    let {\n      index: BoardNum\n    } = this.props.location.state;\n    const {\n      boards\n    } = this.props;\n    const elem = boards[BoardNum];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: `list${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, provider => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provider.droppableProps, {\n      ref: provider.innerRef,\n      key: index,\n      className: \"bg-white p-2 rounded m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font-weight-bolder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 29\n      }\n    }, elem.listName), elem.cards.map((elm, cardindex) => {\n      return /*#__PURE__*/React.createElement(Draggable, {\n        index: cardindex,\n        draggableId: `list${index}card${cardindex}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 40\n        }\n      }, provider => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provider.draggableProps, {\n        ref: provider.innerRef\n      }, provider.dragHandleProps, {\n        key: cardindex,\n        className: \"bg-light p-2 m-2 shadow rounded text-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 41\n        }\n      }), elm.cardName));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center rounded addBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    }), \" Add\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"myboard state\", state);\n  return {\n    boards: state.appReducer.boards\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    addList,\n    addCard,\n    sorted,\n    editField\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListComp);","map":{"version":3,"sources":["/Users/macbookpro/Downloads/my codes/daily-assignment/W24Wass/weekly-ass/src/components/listComp.js"],"names":["React","Component","connect","addList","addCard","sorted","editField","bindActionCreators","Draggable","Droppable","ListComp","render","index","BoardNum","props","location","state","boards","elem","provider","droppableProps","innerRef","listName","cards","map","elm","cardindex","draggableProps","dragHandleProps","cardName","mapStateToProps","console","log","appReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmCC,SAAnC,QAAoD,mBAApD;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAC7BU,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEC,MAAAA,KAAK,EAAEC;AAAT,QAAsB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAA9C;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKH,KAAxB;AACA,UAAMI,IAAI,GAAGD,MAAM,CAACJ,QAAD,CAAnB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAG,OAAMD,KAAM,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMO,QAAD,iBACG,6CAASA,QAAQ,CAACC,cAAlB;AAAkC,MAAA,GAAG,EAAED,QAAQ,CAACE,QAAhD;AAA0D,MAAA,GAAG,EAAET,KAA/D;AAAsE,MAAA,SAAS,EAAC,0BAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCM,IAAI,CAACI,QAA1C,CADJ,EAIKJ,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAMC,SAAN,KAAoB;AAChC,0BAAO,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEA,SAAlB;AAA6B,QAAA,WAAW,EAAG,OAAMd,KAAM,OAAMc,SAAU,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACDP,QAAD,iBACG,6CAASA,QAAQ,CAACQ,cAAlB;AAAkC,QAAA,GAAG,EAAER,QAAQ,CAACE;AAAhD,SAA8DF,QAAQ,CAACS,eAAvE;AAAwF,QAAA,GAAG,EAAEF,SAA7F;AAAwG,QAAA,SAAS,EAAC,2CAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACKD,GAAG,CAACI,QADT,CAFD,CAAP;AAQH,KATA,CAJL,eAcI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,YAAb;AAA0B,qBAAY,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,SAdJ,CAFR,CADJ,CADJ;AA2BH;;AAhC4B;;AAmCjC,MAAMC,eAAe,GAAId,KAAD,IAAW;AAC/Be,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BhB,KAA7B;AACA,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACiB,UAAN,CAAiBhB;AADtB,GAAP;AAGH,CALD;;AAMA,MAAMiB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO5B,kBAAkB,CAAC;AACtBJ,IAAAA,OADsB;AACbC,IAAAA,OADa;AACJC,IAAAA,MADI;AACIC,IAAAA;AADJ,GAAD,EAEtB6B,QAFsB,CAAzB;AAIH,CALD;;AAMA,eAAejC,OAAO,CAClB4B,eADkB,EACDI,kBADC,CAAP,CAEbxB,QAFa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addList, addCard, sorted, editField } from \"../actions/action\";\nimport { bindActionCreators } from \"redux\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\"\n\nclass ListComp extends Component {\n    render() {\n        let { index: BoardNum } = this.props.location.state\n        const { boards } = this.props\n        const elem = boards[BoardNum]\n        return (\n            <div>\n                <Droppable droppableId={`list${index}`}>\n                    {(provider) => (\n                        <div {...provider.droppableProps} ref={provider.innerRef} key={index} className=\"bg-white p-2 rounded m-1\">\n                            <div className=\"font-weight-bolder\">{elem.listName}</div>\n                            {/* <input style={{ background: \"transparent\" }} placeholder=\"Add Card...\" type=\"text\" onChange={(e) => this.setState({ cardName: e.target.value })} />\n                                        <button className=\"bg-light\" onClick={() => this.props.addCard(this.state.cardName, BoardNum, index)}>Add <i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button> */}\n                            {elem.cards.map((elm, cardindex) => {\n                                return <Draggable index={cardindex} draggableId={`list${index}card${cardindex}`}>\n                                    {(provider) => (\n                                        <div {...provider.draggableProps} ref={provider.innerRef} {...provider.dragHandleProps} key={cardindex} className=\"bg-light p-2 m-2 shadow rounded text-dark\">\n                                            {elm.cardName}\n                                        </div>\n                                    )\n                                    }\n                                </Draggable>\n                            })}\n                            <div className=\"text-center rounded addBtn\">\n                                <i className=\"fa fa-plus\" aria-hidden=\"true\" /> Add\n                                        </div>\n                        </div>\n                    )\n                    }\n                </Droppable>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(\"myboard state\", state)\n    return {\n        boards: state.appReducer.boards\n    };\n}\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        addList, addCard, sorted, editField\n    }, dispatch)\n\n}\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(ListComp);"]},"metadata":{},"sourceType":"module"}