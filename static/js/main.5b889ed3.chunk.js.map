{"version":3,"sources":["actions/action.js","components/home.js","components/board.js","App.js","redux/stateReducer.js","index.js"],"names":["fetchBackgrounds","param","request","axios","method","url","dispatch","then","response","console","log","type","payload","data","hits","catch","err","addBoard","deleteItem","index","editField","editIndex","name","boardClicked","Bindex","ind","setClick","addList","addCard","Lindex","sorted","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","BoardNum","Home","state","boardName","BgImgUrl","addData","boardData","board","isSet","props","editData","field","this","page","className","aria-hidden","placeholder","to","style","textDecoration","color","data-toggle","data-target","id","tabIndex","role","aria-labelledby","background","backgroundSize","backgroundRepeat","value","onChange","e","setState","target","data-dismiss","aria-label","onClick","border","overflowY","height","bgImgs","map","elm","width","largeImageURL","src","previewURL","alt","key","boards","length","elem","pathname","rows","outline","readOnly","cursor","Component","connect","appReducer","bindActionCreators","MyBoard","listName","cardName","onDragEnd","result","destination","source","location","droppableId","componentDidUpdate","prevProps","prevState","listSet","backgroundPosition","listArray","provider","droppableProps","ref","innerRef","cards","cardindex","draggableProps","dragHandleProps","display","paddingRight","whiteSpace","App","path","component","initialState","userName","rootReducers","combineReducers","action","stateCopy","JSON","parse","stringify","addToList","newBoards","filter","el","i","newBoard","indexOf","clicked","newBoardList","slice","push","element","bindex","listIndex","parseInt","split","list","card","splice","startListIndex","endListIndex","startList","endList","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b889ed3.chunk.js","sourcesContent":["import axios from \"axios\"\nconst Api_Key = '16039725-c9e448ac866c710680005bca2'\n\nexport function fetchBackgrounds(param) {\n    let request = axios({\n        method: \"get\",\n        url: `https://pixabay.com/api/?key=${Api_Key}&q=nature&page=${param}&image_type=photo`\n    })\n    return (dispatch) => {\n        request.then(response => {\n            console.log(response)\n            dispatch({\n                type: \"fImg\",\n                payload: response.data.hits\n            })\n        }).catch(err => console.log(err));\n    }\n}\n\nexport function addBoard(data) {\n    return {\n        type: \"addBoard\",\n        payload: data\n    }\n}\n\nexport function deleteItem(index) {\n    return {\n        type: \"deleteItem\",\n        payload: index\n    }\n}\n\nexport function editField(data, index) {\n    return {\n        type: \"editField\",\n        payload: {\n            data: data,\n            index: index\n        }\n    }\n}\n\nexport function editIndex(name) {\n    return {\n        type: \"editIndex\",\n        payload: name\n    }\n}\n\nexport function boardClicked(Bindex , ind) {\n    console.log(\"action log\",ind)\n    return {\n        type: \"boardClicked\",\n        payload: {\n            Bindex: Bindex,\n            ind: ind\n        }\n\n    }\n}\n\nexport function setClick() {\n    return {\n        type: \"setClick\"\n    }\n}\n\nexport function addList(data, index) {\n    return {\n        type: \"addList\",\n        payload: {\n            data: data,\n            index: index\n        }\n    }\n}\n\nexport function addCard(data, Bindex, Lindex) {\n    return {\n        type: \"addCard\",\n        payload: {\n            data: data,\n            Bindex: Bindex,\n            Lindex: Lindex\n        }\n    }\n}\n\nexport function sorted(droppableIdStart,droppableIdEnd,droppableIndexStart,droppableIndexEnd,draggableId, BoardNum) {\n    return {\n        type: \"sorted\",\n        payload: {\n            droppableIdStart,\n            droppableIdEnd,\n            droppableIndexStart,\n            droppableIndexEnd,\n            draggableId,\n            BoardNum\n        }\n    }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\nimport {\n  deleteItem,\n  addBoard,\n  editField,\n  editIndex,\n  boardClicked,\n  setClick,\n  fetchBackgrounds,\n} from '../actions/action'\n\nclass Home extends Component {\n  state = {\n    boardName: '',\n    BgImgUrl: '',\n  }\n\n  addData = () => {\n    let boardData = {\n      board: {\n        boardName: this.state.boardName,\n        isSet: false,\n        BgImgUrl: this.state.BgImgUrl,\n      },\n    }\n    this.props.addBoard(boardData.board)\n  }\n\n  editData = (field, index) => {\n    this.props.editField(field, index)\n  }\n\n  componentDidMount() {\n    this.props.fetchBackgrounds(this.props.page)\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n      <div>\n        <nav className=\"navbar py-1 navBar1\">\n          <div className=\"d-flex col\">\n            <div className=\"row col-md-5\">\n              <i className=\"fa fa-home rounded mr-1\" aria-hidden=\"true\"></i>\n              <input\n                className=\"searchInp rounded\"\n                type=\"search\"\n                placeholder=\"Search...\"\n              />\n            </div>\n            <div className=\"col-md-2 mt-1 text-center\">\n              <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\n                <h4 className=\"trello\">\n                  <i className=\"fa fa-trello mr-1\" aria-hidden=\"true\"></i>Trello\n                </h4>\n              </Link>\n            </div>\n            <button\n              data-toggle=\"modal\"\n              data-target=\"#exampleModal\"\n              className=\"button rounded ml-auto\"\n            >\n              <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Create New Board\n            </button>\n          </div>\n        </nav>\n\n        <div\n          className=\"modal fade\"\n          id=\"exampleModal\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"d-flex\">\n              <div\n                style={{\n                  background: `url(${this.state.BgImgUrl})`,\n                  backgroundSize: 'contain',\n                  backgroundRepeat: 'no-repeat',\n                }}\n                className=\"modal-content bg-transparent\"\n              >\n                <div className=\"modal-body\">\n                  <input\n                    value={this.state.boardName}\n                    onChange={(e) =>\n                      this.setState({ boardName: e.target.value })\n                    }\n                    className=\"w-75 rounded searchInp\"\n                    type=\"text\"\n                    placeholder=\"Enter Title\"\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div\n                  onClick={() => this.addData()}\n                  data-dismiss=\"modal\"\n                  className=\"btn btn-success mt-3\"\n                >\n                  Create Board\n                </div>\n              </div>\n              <div\n                style={{ border: 'none' }}\n                className=\"modal-content col-md-4 bg-transparent\"\n              >\n                <div\n                  style={{ overflowY: 'scroll', height: '120px' }}\n                  className=\"row\"\n                >\n                  {this.props.bgImgs.map((elm, index) => {\n                    return (\n                      <img\n                        width=\"900px\"\n                        height=\"30\"\n                        onClick={() =>\n                          this.setState({ BgImgUrl: elm.largeImageURL })\n                        }\n                        src={elm.previewURL}\n                        alt=\"\"\n                        key={index}\n                        className=\"p-0 m-1 rounded col-md-4\"\n                      ></img>\n                    )\n                  })}\n                  <button\n                    onClick={() => this.props.fetchBackgrounds(this.props.page)}\n                  >\n                    more\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"app\">\n          {this.props.boards.length === 0 && (\n            <h4 className=\"font-weight-lighter text-center\">\n              No Trello Boards Available!\n            </h4>\n          )}\n\n          <div className=\"d-flex justify-content-start\">\n            {this.props.boards.length !== 0 &&\n              this.props.boards.map((elem, index) => {\n                return (\n                  <div key={index} className=\"card m-3 shadow\">\n                    <Link\n                      style={{ textDecoration: 'none' }}\n                      to={{ pathname: '/myboard', state: { index } }}\n                    >\n                      <div className=\"mt-2 ml-2 d-flex col\">\n                        <div className=\"font-weight-bolder mt-1 text-secondary\">\n                          Board Title\n                        </div>\n                        <div className=\"ml-auto\">\n                          <i\n                            className=\"fa text-dark fa-arrow-circle-o-right fa-2x\"\n                            aria-hidden=\"true\"\n                          ></i>\n                        </div>\n                      </div>\n                    </Link>\n\n                    <div className=\"card-body\">\n                      {elem.isSet ? (\n                        <textarea\n                          style={{ border: 'solid 1px rgb(165, 165, 165)' }}\n                          onChange={(e) =>\n                            this.setState({ boardName: e.target.value })\n                          }\n                          rows=\"1\"\n                          className=\"card-title p-2 bg-light rounded\"\n                        >\n                          {elem.boardName}\n                        </textarea>\n                      ) : (\n                        <div\n                          style={{ outline: 'none', border: 'none' }}\n                          readOnly\n                          onChange={(e) =>\n                            this.setState({ boardName: e.target.value })\n                          }\n                          rows=\"1\"\n                          className=\"card-title p-2 bg-light rounded\"\n                        >\n                          {elem.boardName}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"ml-auto d-flex\">\n                      <div\n                        style={{ cursor: 'pointer' }}\n                        onClick={() =>\n                          this.editData(this.state.boardName, index)\n                        }\n                      >\n                        {elem.isSet ? (\n                          <i\n                            className=\"fa fa-check-square-o m-2 text-success\"\n                            aria-hidden=\"true\"\n                          ></i>\n                        ) : (\n                          <i className=\"fa fa-pencil-square-o m-2 text-secondary\"></i>\n                        )}\n                      </div>\n                      <i\n                        style={{ cursor: 'pointer' }}\n                        className=\"fa fa-trash m-2 text-secondary\"\n                        onClick={() => {\n                          this.props.deleteItem(index)\n                        }}\n                        aria-hidden=\"true\"\n                      ></i>\n                    </div>\n                  </div>\n                )\n              })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    boards: state.appReducer.boards,\n    bgImgs: state.appReducer.bgImgs,\n    page: state.appReducer.page,\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      deleteItem,\n      addBoard,\n      editField,\n      editIndex,\n      boardClicked,\n      setClick,\n      fetchBackgrounds,\n    },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {\n  addList,\n  addCard,\n  sorted,\n  editField,\n  setClick,\n  boardClicked,\n} from '../actions/action'\nimport { bindActionCreators } from 'redux'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\n\nclass MyBoard extends Component {\n  state = {\n    listName: '',\n    cardName: '',\n  }\n\n  editData = (field, index) => {\n    this.props.editField(field, index)\n  }\n\n  onDragEnd = (result) => {\n    let { destination, source, draggableId } = result\n    let { index: BoardNum } = this.props.location.state\n    if (!destination) return true\n    this.props.sorted(\n      source.droppableId,\n      destination.droppableId,\n      source.index,\n      destination.index,\n      draggableId,\n      BoardNum\n    )\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (prevState === this.state) {\n      this.setState({\n        listName: '',\n        cardName: '',\n      })\n    }\n    if (prevProps === this.props) {\n      this.setState(this.props.boards.listSet)\n    }\n  }\n\n  render() {\n    let { index: BoardNum } = this.props.location.state\n    const { boards } = this.props\n    const elem = boards[BoardNum]\n    return (\n      <div\n        style={{\n          background: `url(${elem.BgImgUrl})`,\n          backgroundSize: 'cover',\n          backgroundPosition: '50%',\n        }}\n      >\n        <nav className=\"navbar py-1 navBar\">\n          <div className=\"d-flex col\">\n            <div className=\"row col-md-5\">\n              <i className=\"fa fa-home rounded mr-1\" aria-hidden=\"true\"></i>\n              <input\n                className=\"searchInp rounded\"\n                type=\"search\"\n                placeholder=\"Search...\"\n              />\n            </div>\n            <div className=\"col-md-2 mt-1 text-center\">\n              <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\n                <h4 className=\"trello\">\n                  <i className=\"fa fa-trello mr-1\" aria-hidden=\"true\"></i>Trello\n                </h4>\n              </Link>\n            </div>\n            <div className=\"col\">\n              <div className=\"float-right font-weight-bolder text-white\">\n                {elem.boardName}\n              </div>\n            </div>\n          </div>\n        </nav>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <div id=\"mainContainer\">\n            <div className=\"list m-2\">\n              {elem.listArray.map((elem, index) => {\n                return (\n                  <Droppable droppableId={`list${index}`}>\n                    {(provider) => (\n                      <div\n                        {...provider.droppableProps}\n                        ref={provider.innerRef}\n                        key={index}\n                        className=\"bg-white p-2 col-2 rounded m-1\"\n                      >\n                        <div className=\"font-weight-bolder\">\n                          {elem.listName}\n                        </div>\n                        {elem.cards.map((elm, cardindex) => {\n                          return (\n                            <Draggable\n                              index={cardindex}\n                              draggableId={`list${index}card${cardindex}`}\n                            >\n                              {(provider) => (\n                                <div\n                                  {...provider.draggableProps}\n                                  ref={provider.innerRef}\n                                  {...provider.dragHandleProps}\n                                  key={cardindex}\n                                  className=\"bg-light p-2 m-2 shadow rounded text-dark\"\n                                >\n                                  {elm.cardName}\n                                </div>\n                              )}\n                            </Draggable>\n                          )\n                        })}\n                        {provider.placeholder}\n                        <div className=\"text-center rounded addBtn\">\n                          {elem.listSet ? (\n                            <div>\n                              <textarea\n                                value={this.state.cardName}\n                                placeholder=\"Add Card...\"\n                                style={{\n                                  border: 'solid 1px rgb(165, 165, 165)',\n                                }}\n                                onChange={(e) =>\n                                  this.setState({ cardName: e.target.value })\n                                }\n                                rows=\"1\"\n                                className=\"card-title p-2 bg-light rounded\"\n                              ></textarea>\n                              <button\n                                onClick={() =>\n                                  this.props.addCard(\n                                    this.state.cardName,\n                                    BoardNum,\n                                    index\n                                  )\n                                }\n                                className=\"btn btn-success\"\n                              >\n                                Add Card\n                              </button>\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() =>\n                                this.props.boardClicked(BoardNum, index)\n                              }\n                            >\n                              <i className=\"fa fa-plus\" aria-hidden=\"true\" />{' '}\n                              Add\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </Droppable>\n                )\n              })}\n              <div\n                style={{\n                  display: 'inlineBlock',\n                  paddingRight: '10px',\n                  whiteSpace: 'nowrap',\n                }}\n              >\n                <input\n                  style={{ background: 'transparent', color: 'white' }}\n                  value={this.state.listName}\n                  placeholder=\"Add List...\"\n                  type=\"text\"\n                  onChange={(e) => this.setState({ listName: e.target.value })}\n                />\n                <button\n                  className=\"btn btn-sm bg-light\"\n                  onClick={() =>\n                    this.props.addList(this.state.listName, BoardNum)\n                  }\n                >\n                  Add <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </DragDropContext>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('myboard state', state)\n  return {\n    boards: state.appReducer.boards,\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      addList,\n      addCard,\n      sorted,\n      editField,\n      setClick,\n      boardClicked,\n    },\n    dispatch\n  )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MyBoard)\n","import React, { Component } from 'react';\nimport Home from \"./components/home\";\nimport MyBoard from \"./components/board\";\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/myboard\" component={MyBoard}>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nlet initialState = {\n    userName: \"\",\n    page: 1,\n    bgImgs: [],\n    boards: []\n}\n\nfunction appReducer(state = initialState, action) {\n    let stateCopy = JSON.parse(JSON.stringify(state))\n    switch (action.type) {\n        case \"fImg\":\n            console.log(action.payload)\n            stateCopy.bgImgs = [...stateCopy.bgImgs,...action.payload]\n            stateCopy.page++\n            return stateCopy;\n        case \"addBoard\":\n            return addToList(stateCopy, action.payload)\n        case \"deleteItem\":\n            let newBoards = stateCopy.boards.filter((el, i) => i !== action.payload)\n            stateCopy.boards = newBoards\n            return stateCopy;\n        case \"editField\":\n            return editField(stateCopy, action.payload.data, action.payload.index)\n        case \"editIndex\":\n            let newBoard = stateCopy.boards.indexOf(action.payload)\n            stateCopy.boards = newBoard\n            return stateCopy;\n        case \"boardClicked\":\n            return clicked(stateCopy, action.payload.Bindex, action.payload.ind)\n        case \"addList\":\n            console.log(action.payload)\n            return addList(stateCopy, action.payload.data, action.payload.index)\n        case \"addCard\":\n            return addCard(stateCopy, action.payload.data, action.payload.Bindex, action.payload.Lindex)\n        case \"sorted\":\n            return sorted(stateCopy, action.payload)\n        default:\n            return stateCopy;\n    }\n}\n\nconst rootReducers = combineReducers({\n    appReducer\n})\n\nexport default rootReducers;\n\nlet addToList = (state, data) => {\n    data.listArray = []\n    let newBoardList = state.boards.slice()\n    newBoardList.push(data)\n    state.boards = newBoardList;\n    return state;\n}\n\nlet editField = (state, data, index) => {\n    state.boards.map((element, i) => {\n        if (i === index) {\n            element.boardName = data\n            element.isSet = !element.isSet\n        }\n        return true\n    });\n    return state\n}\n\nlet clicked = (state, bindex, index) => {\n    console.log(bindex, index)\n    state.boards[bindex].listArray.map((elem, i) => {\n        if (i === index) {\n            elem.listSet = !elem.listSet\n        }\n        return true\n    })\n    return state\n}\n\nlet addList = (state, data, index) => {\n    state.boards[index].listArray.push({ listName: data, cards: [] })\n    return state\n}\n\nlet addCard = (state, data, Bindex, Lindex) => {\n    console.log(state)\n    state.boards[Bindex].listArray[Lindex].cards.push({ cardName: data })\n    return state\n}\n\nlet sorted = (state, { droppableIdStart, droppableIdEnd, droppableIndexStart, droppableIndexEnd, draggableId, BoardNum }) => {\n    // dragging for same list\n    if (droppableIdStart === droppableIdEnd) {\n        const listIndex = parseInt(droppableIdStart.split(\"t\")[1])\n        console.log(\"listIndex\", listIndex)\n        const list = state.boards[BoardNum].listArray[listIndex]\n        const card = list.cards[droppableIndexStart]\n        list.cards.splice(droppableIndexEnd, 0, card)\n        list.cards.splice(droppableIndexStart, 1)\n    }\n    // dragging for other list\n    else {\n        const startListIndex = parseInt(droppableIdStart.split(\"t\")[1])\n        const endListIndex = parseInt(droppableIdEnd.split(\"t\")[1])\n        const startList = state.boards[BoardNum].listArray[startListIndex]\n        const endList = state.boards[BoardNum].listArray[endListIndex]\n        const card = startList.cards[droppableIndexStart]\n        endList.cards.splice(droppableIndexEnd, 0, card)  \n        startList.cards.splice(droppableIndexStart, 1)\n    }\n    console.log(state.boards[BoardNum])\n    return state\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport appReducer from './redux/stateReducer';\nimport thunk from \"redux-thunk\";\n\nlet store = createStore(appReducer, applyMiddleware(thunk))\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}